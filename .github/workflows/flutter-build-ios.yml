name: Run flutter tests
on:
  workflow_call:
    inputs:
      app-dir:
        required: true
        type: string

    secrets:
      ios_keychain_password:
        required: true
      ios_provisioning_profile_asc:
        required: true
      ios_signing_key_asc:
        required: true
      ios_signing_key_password:
        required: true
      app_store_api_private_key:
        required: true
      app_store_issuer_id:
        required: true
      app_store_api_key_id:
        required: true

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.ios_signing_key_asc }}
        P12_PASSWORD: ${{ secrets.ios_signing_key_password }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.ios_provisioning_profile_asc }}
        KEYCHAIN_PASSWORD: ${{ secrets.ios_keychain_password }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'

    # TODO: Refactor next step (file is only available in the beans repo)
    - run: sh cli.sh --init
    - run: flutter build ipa --release --flavor production --dart-define "ENVIRONMENT=production"  --dart-define "API_BASE_URL=https://api.beansapp.com/v1/"  --export-options-plist=ios/export_options.plist
      working-directory: ${{ inputs.app-dir }}
    - name: 'Upload app to TestFlight'
      uses: apple-actions/upload-testflight-build@v1
      with: 
        app-path: '/Users/runner/work/beans-app/beans-app/beans_app/build/ios/ipa/Beans.ipa' 
        issuer-id: ${{ secrets.app_store_issuer_id}}
        api-key-id: ${{ secrets.app_store_api_key_id}}
        api-private-key: ${{ secrets.app_store_api_private_key}}
    - name: Clean up keychain and provisioning profile
      if: ${{ always() }}
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
        rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
