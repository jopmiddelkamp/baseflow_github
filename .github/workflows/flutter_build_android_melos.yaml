name: Build & Deploy Android (melos)
on:
  workflow_call:
    inputs:
      app-dir:
        required: true
        type: string
      environment: # options development|staging|production
        required: true
        type: string
      packageName: # this should be optional.. https://github.com/r0adkll/upload-google-play/issues/103
        required: true
        type: string
      flutter-version:
        required: false
        type: string
      pre-build-script:
        required: false
        type: string

    secrets:
      android_key_asc:
        required: true
      android_key_passphrase:
        required: true
      android_keystore_asc:
        required: true
      android_keystore_passphrase:
        required: true
      play_store_gservice_account:
        required: true
jobs:
  build:
    runs-on: self-hosted
    steps:
      # Checkout the current GitHub repository.
      - name: Checkout GitHub repository on build agent
        uses: actions/checkout@v2

      # Pre-build script
      - name: Runing pre-build script
        if: ${{ inputs.pre-build-script != '' }}
        run: ${{ inputs.pre-build-script }}

      # Install the correct JAVA version on the build agent.
      - name: Install JAVA on build agent
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options java-version
          java-version: '17'

      # Install Flutter (latest stable) if flutter-version is not specified.
      - name: Install Flutter (latest stable)
        if: ${{ inputs.flutter-version == '' }}
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Install Flutter (${{inputs.flutter-version}} stable) if flutter-version is specified.
      - name: Install Flutter (${{inputs.flutter-version}} stable)
        if: ${{ inputs.flutter-version != '' }}
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{inputs.flutter-version}}

      # Install the Melos Dart package.
      - name: Install melos
        run: flutter pub global activate melos

      # Bootstrap Melos and download Flutter dependencies required by the project.
      - name: Install Dependencies
        run: melos bootstrap && melos get
        working-directory: ${{ inputs.app-dir }}

      # Validate if the source code is formatted according to the Dart style guide (https://github.com/dart-lang/dart_style/wiki/Formatting-Rules).
      - name: Format
        run: melos format:set_exit_if_changed
        working-directory: ${{ inputs.app-dir }}

      # Validate the source code against the configured linting rules (see `analysis_options.yaml`).
      - name: Analyze
        run: melos analyze
        working-directory: ${{ inputs.app-dir }}

      # Runs all unit-tests that are part of the Flutter project.
      - name: Run tests
        run: melos test
        working-directory: ${{ inputs.app-dir }}

      # Decrypt the Android Keystore and configured passwords.
      - name: Decrypt keystore
        run: |
          echo "${{ secrets.ANDROID_KEY_ASC }}" > key.properties.asc
          echo "${{ secrets.ANDROID_KEYSTORE_ASC }}" > upload-keystore.jks.asc
          gpg -d --passphrase "${{ secrets.ANDROID_KEY_PASSPHRASE }}" --batch key.properties.asc > key.properties
          gpg -d --passphrase "${{ secrets.ANDROID_KEYSTORE_PASSPHRASE }}" --batch upload-keystore.jks.asc > upload-keystore.jks
        working-directory: ${{ inputs.app-dir }}/android

      # Build a production release of the Flutter project.
      - name: Build Android production release
        run: melos build:android:runner
        env:
          ENVIRONMENT: ${{ inputs.environment }}

      # Upload the production release to the internal test track on Google Play Store.
      - name: Release APPBUNDLE to internal track
        uses: r0adkll/upload-google-play@v1.0.16
        with:
          serviceAccountJsonPlainText: ${{ secrets.play_store_gservice_account }}
          releaseFile: ${{ inputs.app-dir }}/build/app/outputs/bundle/productionRelease/app-production-release.aab
          status: 'draft'
          track: internal
          packageName: ${{ inputs.packageName }}
